[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/feb_stats", "scripts"]

[project]
name = "feb-stats"
version = "1.0.0"
authors = [
    { name = "Álvaro Peris", email = "lvapeab@gmail.com" }
]
description = "FEB Stats: Insights from FEB data."
readme = "README.md"
requires-python = ">=3.10,<3.12"
dependencies = [
    "lxml>=5.3.0,<6.0.0",
    "numpy>=2.1.2,<3.0.0",
    "openpyxl>=3.1.5,<4.0.0",
    "pandas>=2.2.3,<3.0.0",
    "pydantic>=2.10.3,<3.0.0",
    "requests>=2.32.3,<3.0.0",
    "flask>=3.0.3,<4.0.0",
    "pyyaml>=6.0.2,<7.0.0",
    "werkzeug>=3.0.4,<4.0.0",
    "gunicorn>=23.0.0,<24.0.0",
    "grpcio>=1.68.1,<2.0.0",
    "grpcio-reflection>=1.68.1,<2.0.0",
    "grpcio-status>=1.68.1,<2.0.0",
    "grpcio-tools>=1.68.1,<2.0.0",
    "beautifulsoup4>=4.12.3,<5.0.0",
    "django>=5.1.5,<6.0.0",
    "django-stubs>=5.1.2,<6.0.0",
    "django-staticfiles>=1.2.1,<2.0.0",
    "whitenoise>=6.8.2,<7.0.0",
]
[project.optional-dependencies]
dev = [
    "mypy>=1.12.1,<2.0.0",
    "types-beautifulsoup4>=4.12.0,<5.0.0",
    "ruff>=0.8.2,<1.0.0",
    "pytest>=8.3.3,<9.0.0",
    "pytest-cov>=6.0.0,<7.0.0",
    "pytest-django>=4.9.0,<5.0.0",
    "mypy-protobuf>=3.6.0,<4.0.0",
    "types-PyYAML>=6.0.12,<7.0.0",
    "types-requests>=2.32.0,<3.0.0",
]

[project.scripts]
lint = "scripts.lint:main"




[tool.ruff]
line-length = 120
target-version = "py311"
indent-width = 4

[tool.ruff.lint]
select = ["F", "I", "E", "TCH", "UP"]
ignore = []
exclude = [
    "*/migrations/*",
    "*/build/*",
    "doc/",
    "./venv",
    ".pyenv*",
    "src/service/codegen/*"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
omit = [
    "*/settings/*",
    "*/migrations/*",
    ".venv/*",
    "*/tests/*",
    "*/commands/*",
    "src/service/codegen/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    ".__instance is None:",
    "@abstract",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
